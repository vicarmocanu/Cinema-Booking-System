//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUIClient.MovieSrv {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeLimit {
            get {
                return this.AgeLimitField;
            }
            set {
                if ((this.AgeLimitField.Equals(value) != true)) {
                    this.AgeLimitField = value;
                    this.RaisePropertyChanged("AgeLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MovieSrv.IMovieService")]
    public interface IMovieService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/insertMovie", ReplyAction="http://tempuri.org/IMovieService/insertMovieResponse")]
        int insertMovie(string name, string genre, int ageLimit, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/insertMovie", ReplyAction="http://tempuri.org/IMovieService/insertMovieResponse")]
        System.Threading.Tasks.Task<int> insertMovieAsync(string name, string genre, int ageLimit, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/updateMovie", ReplyAction="http://tempuri.org/IMovieService/updateMovieResponse")]
        int updateMovie(int movieId, string name, string genre, int ageLimit, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/updateMovie", ReplyAction="http://tempuri.org/IMovieService/updateMovieResponse")]
        System.Threading.Tasks.Task<int> updateMovieAsync(int movieId, string name, string genre, int ageLimit, int length);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/deleteMovie", ReplyAction="http://tempuri.org/IMovieService/deleteMovieResponse")]
        int deleteMovie(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/deleteMovie", ReplyAction="http://tempuri.org/IMovieService/deleteMovieResponse")]
        System.Threading.Tasks.Task<int> deleteMovieAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getMovieById", ReplyAction="http://tempuri.org/IMovieService/getMovieByIdResponse")]
        GUIClient.MovieSrv.Movie getMovieById(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getMovieById", ReplyAction="http://tempuri.org/IMovieService/getMovieByIdResponse")]
        System.Threading.Tasks.Task<GUIClient.MovieSrv.Movie> getMovieByIdAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getMovies", ReplyAction="http://tempuri.org/IMovieService/getMoviesResponse")]
        GUIClient.MovieSrv.Movie[] getMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/getMovies", ReplyAction="http://tempuri.org/IMovieService/getMoviesResponse")]
        System.Threading.Tasks.Task<GUIClient.MovieSrv.Movie[]> getMoviesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMovieServiceChannel : GUIClient.MovieSrv.IMovieService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MovieServiceClient : System.ServiceModel.ClientBase<GUIClient.MovieSrv.IMovieService>, GUIClient.MovieSrv.IMovieService {
        
        public MovieServiceClient() {
        }
        
        public MovieServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MovieServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int insertMovie(string name, string genre, int ageLimit, int length) {
            return base.Channel.insertMovie(name, genre, ageLimit, length);
        }
        
        public System.Threading.Tasks.Task<int> insertMovieAsync(string name, string genre, int ageLimit, int length) {
            return base.Channel.insertMovieAsync(name, genre, ageLimit, length);
        }
        
        public int updateMovie(int movieId, string name, string genre, int ageLimit, int length) {
            return base.Channel.updateMovie(movieId, name, genre, ageLimit, length);
        }
        
        public System.Threading.Tasks.Task<int> updateMovieAsync(int movieId, string name, string genre, int ageLimit, int length) {
            return base.Channel.updateMovieAsync(movieId, name, genre, ageLimit, length);
        }
        
        public int deleteMovie(int movieId) {
            return base.Channel.deleteMovie(movieId);
        }
        
        public System.Threading.Tasks.Task<int> deleteMovieAsync(int movieId) {
            return base.Channel.deleteMovieAsync(movieId);
        }
        
        public GUIClient.MovieSrv.Movie getMovieById(int movieId) {
            return base.Channel.getMovieById(movieId);
        }
        
        public System.Threading.Tasks.Task<GUIClient.MovieSrv.Movie> getMovieByIdAsync(int movieId) {
            return base.Channel.getMovieByIdAsync(movieId);
        }
        
        public GUIClient.MovieSrv.Movie[] getMovies() {
            return base.Channel.getMovies();
        }
        
        public System.Threading.Tasks.Task<GUIClient.MovieSrv.Movie[]> getMoviesAsync() {
            return base.Channel.getMoviesAsync();
        }
    }
}

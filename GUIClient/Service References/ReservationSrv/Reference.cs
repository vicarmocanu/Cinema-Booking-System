//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUIClient.ReservationSrv {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reservation", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Reservation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfSeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReservationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Seat[] ReservedSeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Session SessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfSeats {
            get {
                return this.NoOfSeatsField;
            }
            set {
                if ((this.NoOfSeatsField.Equals(value) != true)) {
                    this.NoOfSeatsField = value;
                    this.RaisePropertyChanged("NoOfSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReservationId {
            get {
                return this.ReservationIdField;
            }
            set {
                if ((this.ReservationIdField.Equals(value) != true)) {
                    this.ReservationIdField = value;
                    this.RaisePropertyChanged("ReservationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Seat[] ReservedSeats {
            get {
                return this.ReservedSeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReservedSeatsField, value) != true)) {
                    this.ReservedSeatsField = value;
                    this.RaisePropertyChanged("ReservedSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Session Session {
            get {
                return this.SessionField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionField, value) != true)) {
                    this.SessionField = value;
                    this.RaisePropertyChanged("Session");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerUsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerAddress {
            get {
                return this.CustomerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAddressField, value) != true)) {
                    this.CustomerAddressField = value;
                    this.RaisePropertyChanged("CustomerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerCity {
            get {
                return this.CustomerCityField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCityField, value) != true)) {
                    this.CustomerCityField = value;
                    this.RaisePropertyChanged("CustomerCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerEmail {
            get {
                return this.CustomerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerEmailField, value) != true)) {
                    this.CustomerEmailField = value;
                    this.RaisePropertyChanged("CustomerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFirstName {
            get {
                return this.CustomerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFirstNameField, value) != true)) {
                    this.CustomerFirstNameField = value;
                    this.RaisePropertyChanged("CustomerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLastName {
            get {
                return this.CustomerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLastNameField, value) != true)) {
                    this.CustomerLastNameField = value;
                    this.RaisePropertyChanged("CustomerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPassword {
            get {
                return this.CustomerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPasswordField, value) != true)) {
                    this.CustomerPasswordField = value;
                    this.RaisePropertyChanged("CustomerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPhoneNo {
            get {
                return this.CustomerPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPhoneNoField, value) != true)) {
                    this.CustomerPhoneNoField = value;
                    this.RaisePropertyChanged("CustomerPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerUsername {
            get {
                return this.CustomerUsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerUsernameField, value) != true)) {
                    this.CustomerUsernameField = value;
                    this.RaisePropertyChanged("CustomerUsername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Session : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnterTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Movie MovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Seat[][] SeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnterTime {
            get {
                return this.EnterTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EnterTimeField, value) != true)) {
                    this.EnterTimeField = value;
                    this.RaisePropertyChanged("EnterTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExitTime {
            get {
                return this.ExitTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExitTimeField, value) != true)) {
                    this.ExitTimeField = value;
                    this.RaisePropertyChanged("ExitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Seat[][] Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUIClient.ReservationSrv.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUIClient.ReservationSrv.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatId {
            get {
                return this.SeatIdField;
            }
            set {
                if ((this.SeatIdField.Equals(value) != true)) {
                    this.SeatIdField = value;
                    this.RaisePropertyChanged("SeatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatNumber {
            get {
                return this.SeatNumberField;
            }
            set {
                if ((this.SeatNumberField.Equals(value) != true)) {
                    this.SeatNumberField = value;
                    this.RaisePropertyChanged("SeatNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfSeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfSeats {
            get {
                return this.NumberOfSeatsField;
            }
            set {
                if ((this.NumberOfSeatsField.Equals(value) != true)) {
                    this.NumberOfSeatsField = value;
                    this.RaisePropertyChanged("NumberOfSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomNumber {
            get {
                return this.RoomNumberField;
            }
            set {
                if ((this.RoomNumberField.Equals(value) != true)) {
                    this.RoomNumberField = value;
                    this.RaisePropertyChanged("RoomNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/CinemaServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AgeLimit {
            get {
                return this.AgeLimitField;
            }
            set {
                if ((this.AgeLimitField.Equals(value) != true)) {
                    this.AgeLimitField = value;
                    this.RaisePropertyChanged("AgeLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReservationSrv.IReservationService")]
    public interface IReservationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservation", ReplyAction="http://tempuri.org/IReservationService/insertReservationResponse")]
        int insertReservation(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservation", ReplyAction="http://tempuri.org/IReservationService/insertReservationResponse")]
        System.Threading.Tasks.Task<int> insertReservationAsync(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateReservation", ReplyAction="http://tempuri.org/IReservationService/updateReservationResponse")]
        int updateReservation(string firstName, string lastName, int sessionId, int numberOfSeats, int price, string status, int reservationId, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateReservation", ReplyAction="http://tempuri.org/IReservationService/updateReservationResponse")]
        System.Threading.Tasks.Task<int> updateReservationAsync(string firstName, string lastName, int sessionId, int numberOfSeats, int price, string status, int reservationId, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservedSeat", ReplyAction="http://tempuri.org/IReservationService/insertReservedSeatResponse")]
        int insertReservedSeat(int reservationId, int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservedSeat", ReplyAction="http://tempuri.org/IReservationService/insertReservedSeatResponse")]
        System.Threading.Tasks.Task<int> insertReservedSeatAsync(int reservationId, int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateReservedSeat", ReplyAction="http://tempuri.org/IReservationService/updateReservedSeatResponse")]
        int updateReservedSeat(int reservationId, int seatId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateReservedSeat", ReplyAction="http://tempuri.org/IReservationService/updateReservedSeatResponse")]
        System.Threading.Tasks.Task<int> updateReservedSeatAsync(int reservationId, int seatId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/updateSeatsFromReservationResponse")]
        int updateSeatsFromReservation(int reservationId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/updateSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/updateSeatsFromReservationResponse")]
        System.Threading.Tasks.Task<int> updateSeatsFromReservationAsync(int reservationId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getReservation", ReplyAction="http://tempuri.org/IReservationService/getReservationResponse")]
        GUIClient.ReservationSrv.Reservation getReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getReservation", ReplyAction="http://tempuri.org/IReservationService/getReservationResponse")]
        System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation> getReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getReservations", ReplyAction="http://tempuri.org/IReservationService/getReservationsResponse")]
        GUIClient.ReservationSrv.Reservation[] getReservations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getReservations", ReplyAction="http://tempuri.org/IReservationService/getReservationsResponse")]
        System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation[]> getReservationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getCustomerReservations", ReplyAction="http://tempuri.org/IReservationService/getCustomerReservationsResponse")]
        GUIClient.ReservationSrv.Reservation[] getCustomerReservations(string custFName, string custLName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getCustomerReservations", ReplyAction="http://tempuri.org/IReservationService/getCustomerReservationsResponse")]
        System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation[]> getCustomerReservationsAsync(string custFName, string custLName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/getSeatsFromReservationResponse")]
        GUIClient.ReservationSrv.Seat[] getSeatsFromReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/getSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/getSeatsFromReservationResponse")]
        System.Threading.Tasks.Task<GUIClient.ReservationSrv.Seat[]> getSeatsFromReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservedSeats", ReplyAction="http://tempuri.org/IReservationService/insertReservedSeatsResponse")]
        int[] insertReservedSeats(int reservationId, int sessionId, int noOfWantedSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/insertReservedSeats", ReplyAction="http://tempuri.org/IReservationService/insertReservedSeatsResponse")]
        System.Threading.Tasks.Task<int[]> insertReservedSeatsAsync(int reservationId, int sessionId, int noOfWantedSeats);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteReservation", ReplyAction="http://tempuri.org/IReservationService/deleteReservationResponse")]
        int deleteReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteReservation", ReplyAction="http://tempuri.org/IReservationService/deleteReservationResponse")]
        System.Threading.Tasks.Task<int> deleteReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteReservedSeat", ReplyAction="http://tempuri.org/IReservationService/deleteReservedSeatResponse")]
        int deleteReservedSeat(int reservationId, int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteReservedSeat", ReplyAction="http://tempuri.org/IReservationService/deleteReservedSeatResponse")]
        System.Threading.Tasks.Task<int> deleteReservedSeatAsync(int reservationId, int seatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/deleteSeatsFromReservationResponse")]
        int deleteSeatsFromReservation(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/deleteSeatsFromReservation", ReplyAction="http://tempuri.org/IReservationService/deleteSeatsFromReservationResponse")]
        System.Threading.Tasks.Task<int> deleteSeatsFromReservationAsync(int reservationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/trustedInsertReservedSeats", ReplyAction="http://tempuri.org/IReservationService/trustedInsertReservedSeatsResponse")]
        int[] trustedInsertReservedSeats(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReservationService/trustedInsertReservedSeats", ReplyAction="http://tempuri.org/IReservationService/trustedInsertReservedSeatsResponse")]
        System.Threading.Tasks.Task<int[]> trustedInsertReservedSeatsAsync(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReservationServiceChannel : GUIClient.ReservationSrv.IReservationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReservationServiceClient : System.ServiceModel.ClientBase<GUIClient.ReservationSrv.IReservationService>, GUIClient.ReservationSrv.IReservationService {
        
        public ReservationServiceClient() {
        }
        
        public ReservationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReservationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReservationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int insertReservation(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status) {
            return base.Channel.insertReservation(firstName, lastName, sessionId, numberOfSeats, price, status);
        }
        
        public System.Threading.Tasks.Task<int> insertReservationAsync(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status) {
            return base.Channel.insertReservationAsync(firstName, lastName, sessionId, numberOfSeats, price, status);
        }
        
        public int updateReservation(string firstName, string lastName, int sessionId, int numberOfSeats, int price, string status, int reservationId, string data) {
            return base.Channel.updateReservation(firstName, lastName, sessionId, numberOfSeats, price, status, reservationId, data);
        }
        
        public System.Threading.Tasks.Task<int> updateReservationAsync(string firstName, string lastName, int sessionId, int numberOfSeats, int price, string status, int reservationId, string data) {
            return base.Channel.updateReservationAsync(firstName, lastName, sessionId, numberOfSeats, price, status, reservationId, data);
        }
        
        public int insertReservedSeat(int reservationId, int seatId) {
            return base.Channel.insertReservedSeat(reservationId, seatId);
        }
        
        public System.Threading.Tasks.Task<int> insertReservedSeatAsync(int reservationId, int seatId) {
            return base.Channel.insertReservedSeatAsync(reservationId, seatId);
        }
        
        public int updateReservedSeat(int reservationId, int seatId, string status) {
            return base.Channel.updateReservedSeat(reservationId, seatId, status);
        }
        
        public System.Threading.Tasks.Task<int> updateReservedSeatAsync(int reservationId, int seatId, string status) {
            return base.Channel.updateReservedSeatAsync(reservationId, seatId, status);
        }
        
        public int updateSeatsFromReservation(int reservationId, string status) {
            return base.Channel.updateSeatsFromReservation(reservationId, status);
        }
        
        public System.Threading.Tasks.Task<int> updateSeatsFromReservationAsync(int reservationId, string status) {
            return base.Channel.updateSeatsFromReservationAsync(reservationId, status);
        }
        
        public GUIClient.ReservationSrv.Reservation getReservation(int reservationId) {
            return base.Channel.getReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation> getReservationAsync(int reservationId) {
            return base.Channel.getReservationAsync(reservationId);
        }
        
        public GUIClient.ReservationSrv.Reservation[] getReservations() {
            return base.Channel.getReservations();
        }
        
        public System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation[]> getReservationsAsync() {
            return base.Channel.getReservationsAsync();
        }
        
        public GUIClient.ReservationSrv.Reservation[] getCustomerReservations(string custFName, string custLName) {
            return base.Channel.getCustomerReservations(custFName, custLName);
        }
        
        public System.Threading.Tasks.Task<GUIClient.ReservationSrv.Reservation[]> getCustomerReservationsAsync(string custFName, string custLName) {
            return base.Channel.getCustomerReservationsAsync(custFName, custLName);
        }
        
        public GUIClient.ReservationSrv.Seat[] getSeatsFromReservation(int reservationId) {
            return base.Channel.getSeatsFromReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<GUIClient.ReservationSrv.Seat[]> getSeatsFromReservationAsync(int reservationId) {
            return base.Channel.getSeatsFromReservationAsync(reservationId);
        }
        
        public int[] insertReservedSeats(int reservationId, int sessionId, int noOfWantedSeats) {
            return base.Channel.insertReservedSeats(reservationId, sessionId, noOfWantedSeats);
        }
        
        public System.Threading.Tasks.Task<int[]> insertReservedSeatsAsync(int reservationId, int sessionId, int noOfWantedSeats) {
            return base.Channel.insertReservedSeatsAsync(reservationId, sessionId, noOfWantedSeats);
        }
        
        public int deleteReservation(int reservationId) {
            return base.Channel.deleteReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<int> deleteReservationAsync(int reservationId) {
            return base.Channel.deleteReservationAsync(reservationId);
        }
        
        public int deleteReservedSeat(int reservationId, int seatId) {
            return base.Channel.deleteReservedSeat(reservationId, seatId);
        }
        
        public System.Threading.Tasks.Task<int> deleteReservedSeatAsync(int reservationId, int seatId) {
            return base.Channel.deleteReservedSeatAsync(reservationId, seatId);
        }
        
        public int deleteSeatsFromReservation(int reservationId) {
            return base.Channel.deleteSeatsFromReservation(reservationId);
        }
        
        public System.Threading.Tasks.Task<int> deleteSeatsFromReservationAsync(int reservationId) {
            return base.Channel.deleteSeatsFromReservationAsync(reservationId);
        }
        
        public int[] trustedInsertReservedSeats(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status) {
            return base.Channel.trustedInsertReservedSeats(firstName, lastName, sessionId, numberOfSeats, price, status);
        }
        
        public System.Threading.Tasks.Task<int[]> trustedInsertReservedSeatsAsync(string firstName, string lastName, int sessionId, int numberOfSeats, double price, string status) {
            return base.Channel.trustedInsertReservedSeatsAsync(firstName, lastName, sessionId, numberOfSeats, price, status);
        }
    }
}
